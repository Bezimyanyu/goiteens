#Дано три цілі числа a, b і c. Поверніть
# найбільше число, отримане після вставки операторів +, *, і дужок (). Іншими словами,
# спробуйте кожну комбінацію a, b і c з операторами, не змінюючи порядок операндів, і
# поверніть максимальне значення.

#Приклад

#Для чисел 1, 2 і 3, ось деякі можливі вирази:

#1 * (2 + 3) = 5
#1 * 2 * 3 = 6
#1 + 2 * 3 = 7
#(1 + 2) * 3 = 9

#Максимальне значення, яке можна отримати, дорівнює 9.

#Примітки

 #• Числа завжди додатні, в діапазоні 1 ≤ a, b, c ≤ 10.
 #• Ви можете використовувати одну й ту ж операцію більше одного разу.
 #• Не обов’язково використовувати всі оператори або дужки.
 #• Ви не можете змінювати порядок операндів. Наприклад, для даних чисел ви не можете отримати вираз (1 + 3) * 2 = 8.

#Приклади введення і виведення

 #• expressionsMatter(1, 2, 3) ==> 9, тому що (1 + 2) * 3 = 9.
 #• expressionsMatter(1, 1, 1) ==> 3, тому що 1 + 1 + 1 = 3.
 #• expressionsMatter(9, 1, 1) ==> 18, тому що 9 * (1 + 1) = 18.
def expressionsMatter():
    a = int(input("Введіть 1 число -->\n"))
    b = int(input("Введіть 2 число -->\n"))
    c = int(input("Введіть 3 число -->\n"))
    list = [
        a * (b + c),
        a * b * c,
        a + b * c,
        a + b + c,
        (a + b) * c
    ]

    print(max(list))



#Дано два рядки, a та b, поверніть рядок у формі
    # короткий+довгий+короткий, з коротшим рядком ззовні та довшим рядком
    # всередині. Рядки не будуть однакової довжини, але вони можуть бути порожніми
    # (нульової довжини).

#Підказка для користувачів R:

#Довжина рядка не завжди дорівнює кількості символів

#Наприклад: (Вхід1, Вхід2) –> вихід

 #• ("1", "22") –> "1221"
 #• ("452", "1") –> "4521452"


def Ratka():
    user_input1 = input("Введіть 1 текст -->\n")
    user_input2 = input("Введіть 2 текст -->\n")

    if user_input1 > user_input2:
        print(user_input2 + user_input1 + user_input2)
    else:
        print(user_input1 + user_input2 + user_input1)

#expressionsMatter()
Ratka()
